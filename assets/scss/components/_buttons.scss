/* ==========================================================================
   #BUTTONS
   ========================================================================== */

/**
 * This is an example component. Extend inuitcss by building your own components
 * that make up your UI. Component classes are prefixed with a `c-`.
 */

/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */

.c-btn {
  display: inline-flex !important; /* [1] */
  align-items: center; /* [2] */
  font: inherit; /* [3] */
  text-align: center; /* [4] */
  margin: 0; /* [4] */
  cursor: pointer; /* [5] */
  transition: 300ms ease background !important;
  padding: rem(17px) rem(40px);
  position: relative;
  font-weight: 700;
  z-index: 10;
  min-width: 179px;

  & svg{
    margin-left: rem(10px);
  }

  &--primary{
    //background-color: $cYellow;
    color: $cBlack !important;
    transition: background-color 300ms ease-in-out, color 300ms ease-in-out;

    // &::before{
    //   content: none !important;
    // }

    &:hover,
    &:active,
    &:focus {
      //background-color: $cYellow;
      color: $cBlack !important;
      transition: background-color 300ms ease-in-out, color 300ms ease-in-out;

      &:before {
        transform: translateX(0);
        width: rem(190px);
        transition: transform 300ms ease-in-out, width 300ms ease-in-out;
      }

      & span {
        transform: translateX(0);
        transition: transform 300ms ease-in-out;
      }
    }

    &:before {
      content: "";
      display: block;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background-color: $cYellow;
      z-index: -1;
      width: rem(140px);
      transform: translateX(40px);
      transition: transform 300ms ease-in-out, width 300ms ease-in-out;
    }

    & span {
      transform: translateX(-40px);
      transition: transform 300ms ease-in-out;
    }
  }


  &--secondary{
    background-color: $cLightGrey;
    color: $cBlack !important;
    transition: background-color 300ms ease-in-out, color 300ms ease-in-out;

    &::before{
      content: none !important;
    }

    &:hover,
    &:active,
    &:focus {
      background-color: $cBlack;
      color: $cWhite !important;
      transition: background-color 300ms ease-in-out, color 300ms ease-in-out;
    }
  }
}
